package ua.hero.archiheroes.superpowers.abilities.ability;

import lucraft.mods.lucraftcore.superpowers.abilities.AbilityToggle;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.Gui;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.entity.projectile.EntityFireball;
import net.minecraft.util.DamageSource;
import net.minecraft.util.text.TextComponentTranslation;
import net.minecraftforge.event.entity.living.LivingHurtEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;
import ua.hero.archiheroes.AHIconHelper;

import static org.lwjgl.opengl.Display.isActive;


public class AbilityInvulnerability extends AbilityToggle {

    private static final int COOLDOWN_TICKS = 1000; // Длительность кулдауна (пример 1000 тиков = 50 секунд)

    public AbilityInvulnerability(EntityLivingBase entity) {
        super(entity);
    }

    @Override
    public void updateTick() {
        // Способность активна
        if (isEnabled()) {
            checkAndReflectDamage();
        }

        // Если кулдаун завершён, отключаем способность
        if (this.entity.getEntityData().getBoolean("_InvulnerabilityReset")) {
            this.entity.getEntityData().setBoolean("_InvulnerabilityReset", false);
            this.setCooldown(COOLDOWN_TICKS); // Устанавливаем кулдаун
            this.setEnabled(false); // Отключаем способность
        }
    }

    private void checkAndReflectDamage() {
        if (entity instanceof EntityPlayer) {
            EntityPlayer player = (EntityPlayer) entity;
            // Дополнительная логика может быть добавлена здесь
        }
    }

    @SubscribeEvent
    public void onEntityHurt(LivingHurtEvent event) {
        if (isEnabled() && event.getEntityLiving() == this.entity) {
            Entity attacker = event.getSource().getTrueSource();

            if (attacker != null) {
                attacker.attackEntityFrom(DamageSource.causeThornsDamage(entity), event.getAmount() * 0.5F);
            }

            if (event.getSource().getImmediateSource() instanceof EntityFireball) {
                EntityFireball fireball = (EntityFireball) event.getSource().getImmediateSource();
                if (fireball.shootingEntity != null) {
                    fireball.shootingEntity.attackEntityFrom(DamageSource.causeThornsDamage(entity), event.getAmount() * 0.5F);
                }
            }

            event.setAmount(0); // Блокируем урон для игрока

            // Запускаем кулдаун после блокировки урона
            this.entity.getEntityData().setBoolean("_InvulnerabilityReset", true);
        }
    }

    @Override
    public void setEnabled(boolean enabled) {
        // Проверяем, не истёк ли кулдаун перед включением способности
        if (this.getCooldown() != 0 && enabled) {
            if (this.entity instanceof EntityPlayer) {
                // Показываем сообщение о кулдауне
                ((EntityPlayer) this.entity).sendStatusMessage(new TextComponentTranslation("text.alimercraft.invulnerability_cooldown.name"), true);
            }
        } else {
            super.setEnabled(enabled);
        }
    }

    @SideOnly(Side.CLIENT)
    @Override
    public void drawIcon(Minecraft mc, Gui gui, int x, int y) {
        AHIconHelper.drawIcon(mc, gui, x, y, 1, 2); // Подставьте правильные параметры для отображения иконки
    }
}